{
  "version": 3,
  "sources": ["../lib/accessors.js", "../lib/ndarray.js", "../lib/main.js", "../lib/index.js"],
  "sourcesContent": ["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2025 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// VARIABLES //\n\nvar M = 5;\n\n\n// MAIN //\n\n/**\n* Multiplies `x` by a scalar `alpha`.\n*\n* @param {PositiveInteger} N - number of indexed elements\n* @param {number} alpha - scalar\n* @param {Object} x - input array object\n* @param {Collection} x.data - input array data\n* @param {Array<Function>} x.accessors - array element accessors\n* @param {integer} stride - index increment\n* @param {NonNegativeInteger} offset - starting index\n* @returns {NumericArray} input array\n*\n* @example\n* var toAccessorArray = require( '@stdlib/array-base-to-accessor-array' );\n* var arraylike2object = require( '@stdlib/array-base-arraylike2object' );\n*\n* var x = [ 1.0, -2.0, 3.0, -4.0, 5.0, -6.0 ];\n*\n* gscal( 3, 5.0, arraylike2object( toAccessorArray( x ) ), 1, x.length-3 );\n* // x => [ 1.0, -2.0, 3.0, -20.0, 25.0, -30.0 ]\n*/\nfunction gscal( N, alpha, x, stride, offset ) {\n\tvar xbuf;\n\tvar xget;\n\tvar xset;\n\tvar ix;\n\tvar m;\n\tvar i;\n\n\txbuf = x.data;\n\txget = x.accessors[ 0 ];\n\txset = x.accessors[ 1 ];\n\n\tix = offset;\n\tif ( stride === 0 ) {\n\t\txset( xbuf, ix, xget( xbuf, ix ) * N * alpha );\n\t\treturn x;\n\t}\n\n\t// Use loop unrolling if the stride is equal to `1`...\n\tif ( stride === 1 ) {\n\t\tm = N % M;\n\n\t\t// If we have a remainder, run a clean-up loop...\n\t\tif ( m > 0 ) {\n\t\t\tfor ( i = 0; i < m; i++ ) {\n\t\t\t\txset( xbuf, ix, xget( xbuf, ix ) * alpha );\n\t\t\t\tix += stride;\n\t\t\t}\n\t\t}\n\t\tif ( N < M ) {\n\t\t\treturn x;\n\t\t}\n\t\tfor ( i = m; i < N; i += M ) {\n\t\t\txset( xbuf, ix, xget( xbuf, ix ) * alpha );\n\t\t\txset( xbuf, ix+1, xget( xbuf, ix+1 ) * alpha );\n\t\t\txset( xbuf, ix+2, xget( xbuf, ix+2 ) * alpha );\n\t\t\txset( xbuf, ix+3, xget( xbuf, ix+3 ) * alpha );\n\t\t\txset( xbuf, ix+4, xget( xbuf, ix+4 ) * alpha );\n\t\t\tix += M;\n\t\t}\n\t\treturn x;\n\t}\n\tfor ( i = 0; i < N; i++ ) {\n\t\txset( xbuf, ix, xget( xbuf, ix ) * alpha );\n\t\tix += stride;\n\t}\n\treturn x;\n}\n\n\n// EXPORTS //\n\nmodule.exports = gscal;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar arraylike2object = require( '@stdlib/array-base-arraylike2object' );\nvar accessors = require( './accessors.js' );\n\n\n// VARIABLES //\n\nvar M = 5;\n\n\n// MAIN //\n\n/**\n* Multiplies `x` by a scalar `alpha`.\n*\n* @param {PositiveInteger} N - number of indexed elements\n* @param {number} alpha - scalar\n* @param {NumericArray} x - input array\n* @param {integer} stride - index increment\n* @param {NonNegativeInteger} offset - starting index\n* @returns {NumericArray} input array\n*\n* @example\n* var x = [ 1.0, -2.0, 3.0, -4.0, 5.0, -6.0 ];\n*\n* gscal( 3, 5.0, x, 1, x.length-3 );\n* // x => [ 1.0, -2.0, 3.0, -20.0, 25.0, -30.0 ]\n*/\nfunction gscal( N, alpha, x, stride, offset ) {\n\tvar ix;\n\tvar m;\n\tvar o;\n\tvar i;\n\n\tif ( N <= 0 || alpha === 1.0 ) {\n\t\treturn x;\n\t}\n\to = arraylike2object( x );\n\tif ( o.accessorProtocol ) {\n\t\taccessors( N, alpha, o, stride, offset );\n\t\treturn x;\n\t}\n\n\tix = offset;\n\tif ( stride === 0 ) {\n\t\tx[ ix ] *= alpha * N;\n\t\treturn x;\n\t}\n\n\t// Use loop unrolling if the stride is equal to `1`...\n\tif ( stride === 1 ) {\n\t\tm = N % M;\n\n\t\t// If we have a remainder, run a clean-up loop...\n\t\tif ( m > 0 ) {\n\t\t\tfor ( i = 0; i < m; i++ ) {\n\t\t\t\tx[ ix ] *= alpha;\n\t\t\t\tix += stride;\n\t\t\t}\n\t\t}\n\t\tif ( N < M ) {\n\t\t\treturn x;\n\t\t}\n\t\tfor ( i = m; i < N; i += M ) {\n\t\t\tx[ ix ] *= alpha;\n\t\t\tx[ ix+1 ] *= alpha;\n\t\t\tx[ ix+2 ] *= alpha;\n\t\t\tx[ ix+3 ] *= alpha;\n\t\t\tx[ ix+4 ] *= alpha;\n\t\t\tix += M;\n\t\t}\n\t\treturn x;\n\t}\n\tfor ( i = 0; i < N; i++ ) {\n\t\tx[ ix ] *= alpha;\n\t\tix += stride;\n\t}\n\treturn x;\n}\n\n\n// EXPORTS //\n\nmodule.exports = gscal;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar stride2offset = require( '@stdlib/strided-base-stride2offset' );\nvar ndarray = require( './ndarray.js' );\n\n\n// MAIN //\n\n/**\n* Multiplies `x` by a scalar `alpha`.\n*\n* @param {PositiveInteger} N - number of indexed elements\n* @param {number} alpha - scalar\n* @param {NumericArray} x - input array\n* @param {PositiveInteger} stride - index increment\n* @returns {NumericArray} input array\n*\n* @example\n* var x = [ -2.0, 1.0, 3.0, -5.0, 4.0, 0.0, -1.0, -3.0 ];\n*\n* gscal( x.length, 5.0, x, 1 );\n* // x => [ -10.0, 5.0, 15.0, -25.0, 20.0, 0.0, -5.0, -15.0 ]\n*/\nfunction gscal( N, alpha, x, stride ) {\n\treturn ndarray( N, alpha, x, stride, stride2offset( N, stride ) );\n}\n\n\n// EXPORTS //\n\nmodule.exports = gscal;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* BLAS level 1 routine to multiply `x` by a constant.\n*\n* @module @stdlib/blas-base-gscal\n*\n* @example\n* var gscal = require( '@stdlib/blas-base-gscal' );\n*\n* var x = [ -2.0, 1.0, 3.0, -5.0, 4.0, 0.0, -1.0, -3.0 ];\n*\n* gscal( x.length, 5.0, x, 1 );\n* // x => [ -10.0, 5.0, 15.0, -25.0, 20.0, 0.0, -5.0, -15.0 ]\n*\n* @example\n* var gscal = require( '@stdlib/blas-base-gscal' );\n*\n* var x = [ -2.0, 1.0, 3.0, -5.0, 4.0, 0.0, -1.0, -3.0 ];\n*\n* gscal.ndarray( x.length, 5.0, x, 1, 0 );\n* // x => [ -10.0, 5.0, 15.0, -25.0, 20.0, 0.0, -5.0, -15.0 ]\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils-define-nonenumerable-read-only-property' );\nvar main = require( './main.js' );\nvar ndarray = require( './ndarray.js' );\n\n\n// MAIN //\n\nsetReadOnly( main, 'ndarray', ndarray );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n"],
  "mappings": "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",
  "names": ["require_accessors", "__commonJSMin", "exports", "module", "M", "gscal", "N", "alpha", "x", "stride", "offset", "xbuf", "xget", "xset", "ix", "m", "i", "require_ndarray", "__commonJSMin", "exports", "module", "arraylike2object", "accessors", "M", "gscal", "N", "alpha", "x", "stride", "offset", "ix", "m", "o", "i", "require_main", "__commonJSMin", "exports", "module", "stride2offset", "ndarray", "gscal", "N", "alpha", "x", "stride", "setReadOnly", "main", "ndarray"]
}
